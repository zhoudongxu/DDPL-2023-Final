name:                  gibbon
version:               0.2
synopsis:              A compiler for operating on serialized data
description:           @<http://iu-parfunc.github.io/gibbon/ Gibbon>@
                       is an experimental compiler that transforms high-level
                       functional programs to operate on serialized data.
-- license:
-- license-file:          LICENSE
author:                Ryan Newton
maintainer:            rrnewton@gmail.com
copyright:             Copyright 2016-2022 Ryan Newton and contributors
category:              Compilers/Interpreters
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >=1.10
tested-with:           GHC==9.0.1
                     , GHC==8.10.4
                     , GHC==8.8.4
                     , GHC==8.6.5
                     , GHC==8.4.4

flag LLVM_ENABLED
  description:         Enable LLVM backend
  default:             False

library
  exposed-modules:     Gibbon.Common
                       Gibbon.DynFlags

                       Gibbon.Language
                       Gibbon.Language.Syntax
                       Gibbon.Language.Constants

                       Gibbon.L1.Syntax
                       Gibbon.L1.Typecheck
                       Gibbon.L1.Interp
                       Gibbon.L1.Examples
                       Gibbon.MyLocTypeLang.Syntax
                       Gibbon.MyLocTypeLang.Typecheck
                       Gibbon.MyLocTypeLang.Interp
                       Gibbon.MyLocTypeLang.Helper

                       -- compiler passes, roughly in the order they're run

  other-extensions:    DeriveDataTypeable CPP

  build-depends:       base                     >= 4.11      &&  < 4.16
                     , bytestring               >= 0.10.8.1  &&  < 0.11
                     , text                     >= 1.2.3     &&  < 1.3
                     , process                  >= 1.4.3     &&  < 1.7
                     , filepath                 >= 1.4.1     &&  < 1.5
                     , directory                >= 1.3       &&  < 1.4
                     , containers               >= 0.5.8     &&  < 0.7
                     , deepseq                  >= 1.4.2     &&  < 1.5
                     , mtl                      >= 2.2.1     &&  < 2.3
                     , transformers             >= 0.5.2     &&  < 0.6
                     , clock                    >= 0.7.1     &&  < 0.9
                     , random                   >= 1.1       &&  < 1.2
                     , recursion-schemes        >= 5.1       &&  < 6
                     , vector
                     , tuple
                     -- Parsers:
                     , parsec                   >= 3.1.13    &&  < 3.2
                     , optparse-applicative     >= 0.13.2    &&  < 0.17
                     , haskell-src-exts         >= 1.20.2    &&  < 1.22
                     , hse-cpp                  >= 0.1       &&  < 0.3
                     , s-cargot                 >= 0.1.3     &&  < 0.2
                     , srcloc                   >= 0.5.1     &&  < 0.6
                     , symbol                   >= 0.2.4     &&  < 0.3
                     -- Pretty printers:
                     , pretty                   >= 1.1.1.3   &&  < 1.2
                     , GenericPretty            >= 1.2.1     &&  < 1.3
                     , language-c-quote         >= 0.12.1    &&  < 0.13
                     , mainland-pretty          >= 0.6.1     &&  < 0.8
-- Brings in lots of ekmett dependencies:
--                     , either

  if flag(LLVM_ENABLED)
    -- exposed-modules:
    build-depends:     llvm-hs-pure             >= 6.2.0     &&  < 0.7
                     , llvm-hs                  >= 6.2.0     &&  < 0.7
    cpp-options:       -DLLVM_ENABLED

  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall -Wcompat -Wno-orphans -Wredundant-constraints
                       -Wno-partial-type-signatures -Wno-unused-top-binds
                       -Wno-typed-holes -fdefer-typed-holes
  default-extensions:  ScopedTypeVariables PatternSynonyms DeriveGeneric DeriveFunctor
                       NamedFieldPuns TupleSections TypeFamilies
                       PartialTypeSignatures OverloadedStrings
                       -- This can break things: DeriveAnyClass

executable gibbon
  hs-source-dirs:      app
  main-is:             Frontend.hs

  build-depends:       base
                     , haskell-src-exts
                     , filepath
                     , gibbon

  default-language:    Haskell2010
  ghc-options:         -Wall -rtsopts -fdefer-typed-holes
  default-extensions:  TypeFamilies


test-suite test-gibbon
  type:                exitcode-stdio-1.0
  hs-source-dirs:      tests
  main-is:             Main.hs

  build-depends:       base,
                       gibbon, containers,
                       filepath, directory, process,
                       srcloc, pretty, time,
                       mtl, transformers,
                       tasty, tasty-hunit, tasty-th,
                       text, bytestring
  other-modules:       LocTypeCheck.Typecheck
                       LocTypeCheck.Interp
  default-language:    Haskell2010
  ghc-options:         -fdefer-typed-holes
  default-extensions:  OverloadedStrings NamedFieldPuns


